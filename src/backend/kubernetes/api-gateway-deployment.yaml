apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: habit-tracker
  labels:
    app: habit-tracker
    service: api-gateway
    version: 1.0.0
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
    checksum/config: ${CONFIG_CHECKSUM}  # Will be replaced by deployment tool
    checksum/secrets: ${SECRETS_CHECKSUM}  # Will be replaced by deployment tool

spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  
  selector:
    matchLabels:
      app: habit-tracker
      service: api-gateway
  
  template:
    metadata:
      labels:
        app: habit-tracker
        service: api-gateway
        version: 1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    
    spec:
      serviceAccountName: api-gateway-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      
      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: service
                  operator: In
                  values:
                  - api-gateway
              topologyKey: kubernetes.io/hostname
      
      # Topology spread for zone distribution
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            service: api-gateway
      
      containers:
      - name: api-gateway
        image: habit-tracker/api-gateway:1.0.0
        imagePullPolicy: Always
        
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: NODE_ENV
        - name: API_VERSION
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: API_VERSION
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: LOG_LEVEL
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: CORS_ORIGIN
        - name: RATE_LIMIT_WINDOW
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: RATE_LIMIT_WINDOW
        - name: RATE_LIMIT_MAX_REQUESTS
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: RATE_LIMIT_MAX_REQUESTS
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: api-gateway-secrets
              key: JWT_SECRET
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: api-gateway-secrets
              key: API_KEY
        - name: AUTH_SERVICE_URL
          valueFrom:
            secretKeyRef:
              name: api-gateway-secrets
              key: AUTH_SERVICE_URL
        - name: HABIT_SERVICE_URL
          valueFrom:
            secretKeyRef:
              name: api-gateway-secrets
              key: HABIT_SERVICE_URL
        - name: ANALYTICS_SERVICE_URL
          valueFrom:
            secretKeyRef:
              name: api-gateway-secrets
              key: ANALYTICS_SERVICE_URL
        
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /health/startup
            port: http
          failureThreshold: 30
          periodSeconds: 10
          timeoutSeconds: 5
        
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: api-gateway-config
          mountPath: /app/config
          readOnly: true
      
      volumes:
      - name: tmp
        emptyDir: {}
      - name: api-gateway-config
        configMap:
          name: api-gateway-config
      
      terminationGracePeriodSeconds: 30
      
      # Security policies
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: habit-tracker
  labels:
    app: habit-tracker
    tier: database
    component: postgresql
spec:
  serviceName: postgres
  replicas: 3
  selector:
    matchLabels:
      app: habit-tracker
      tier: database
      component: postgresql
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: habit-tracker
        tier: database
        component: postgresql
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9187"
    spec:
      securityContext:
        fsGroup: 999
      serviceAccountName: postgres-sa
      terminationGracePeriodSeconds: 60
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: component
                    operator: In
                    values:
                      - postgresql
              topologyKey: "kubernetes.io/hostname"
      initContainers:
        - name: init-chmod-data
          image: busybox:1.34
          command: ["sh", "-c", "chmod 700 /var/lib/postgresql/data"]
          securityContext:
            runAsUser: 999
            runAsGroup: 999
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      containers:
        - name: postgres
          image: postgres:14-alpine
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 999
            runAsGroup: 999
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: postgres-password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_DB
              value: habit_tracker
            - name: POSTGRES_USER
              value: postgres
          ports:
            - containerPort: 5432
              protocol: TCP
              name: postgresql
          resources:
            requests:
              cpu: "1000m"
              memory: "2Gi"
            limits:
              cpu: "4000m"
              memory: "8Gi"
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: postgres-config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
            - name: backup
              mountPath: /backup
            - name: tmp
              mountPath: /tmp
          startupProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U postgres
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 30
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U postgres
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U postgres
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
        - name: metrics
          image: wrouesnel/postgres_exporter:v0.8.0
          ports:
            - containerPort: 9187
              name: metrics
          env:
            - name: DATA_SOURCE_NAME
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: metrics-url
        - name: backup
          image: prodrigestivill/postgres-backup-local:14
          env:
            - name: POSTGRES_HOST
              value: localhost
            - name: POSTGRES_DB
              value: habit_tracker
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: postgres-password
            - name: SCHEDULE
              valueFrom:
                configMapKeyRef:
                  name: postgres-backup-config
                  key: schedule
            - name: BACKUP_KEEP_DAYS
              value: "30"
            - name: BACKUP_COMPRESSION
              value: "true"
          volumeMounts:
            - name: backup
              mountPath: /backup
      volumes:
        - name: postgres-config
          configMap:
            name: postgres-config
        - name: tmp
          emptyDir: {}
        - name: backup
          persistentVolumeClaim:
            claimName: postgres-backup-pvc
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: gp2
        resources:
          requests:
            storage: 100Gi
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: postgres-pdb
  namespace: habit-tracker
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: habit-tracker
      tier: database
      component: postgresql
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgres-network-policy
  namespace: habit-tracker
spec:
  podSelector:
    matchLabels:
      app: habit-tracker
      tier: database
      component: postgresql
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: habit-tracker
              tier: backend
      ports:
        - protocol: TCP
          port: 5432
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cache
  namespace: habit-tracker
  labels:
    app: habit-tracker
    component: cache
    tier: backend
  annotations:
    description: "Redis cache cluster for habit tracking application"
    version: "6.x"
spec:
  # High availability configuration with 3 replicas
  replicas: 3
  selector:
    matchLabels:
      app: habit-tracker
      component: cache
  # Zero-downtime deployment strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: habit-tracker
        component: cache
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
    spec:
      # Pod distribution and scheduling rules
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - cache
              topologyKey: kubernetes.io/hostname
      # Security context for the pod
      securityContext:
        fsGroup: 1000
        runAsUser: 999
        runAsNonRoot: true
      containers:
      - name: redis
        image: redis:6-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          protocol: TCP
          name: redis
        # Resource allocation optimized for performance
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        # Configuration and secrets mounting
        volumeMounts:
        - name: redis-config
          mountPath: /usr/local/etc/redis
          readOnly: true
        - name: redis-data
          mountPath: /data
        # Health checks
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        # Environment configuration
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secrets
              key: redis-password
        # Security hardening
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      # Redis configuration and data volumes
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
          items:
          - key: redis.conf
            path: redis.conf
      - name: redis-data
        emptyDir: {}
      # Node selection and tolerations
      nodeSelector:
        kubernetes.io/role: cache
      tolerations:
      - key: "cache"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
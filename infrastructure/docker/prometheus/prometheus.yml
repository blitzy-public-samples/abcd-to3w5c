# Prometheus Configuration v2.x
# This configuration file defines comprehensive monitoring and metrics collection settings
# for the habit tracking application's microservices with enhanced alerting capabilities.

global:
  # Global settings for all jobs unless overridden
  scrape_interval: 15s     # How frequently to scrape targets
  evaluation_interval: 15s # How frequently to evaluate rules
  scrape_timeout: 10s     # How long until a scrape request times out
  external_labels:
    environment: production
    region: us-west-2

# Rule files specifies a list of files containing recording and alerting rules
rule_files:
  - "alerts/*.yml"

# Alerting specifies settings related to the Alertmanager
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - "alertmanager:9093"

# Scrape configurations containing jobs to scrape metrics from services
scrape_configs:
  # API Gateway metrics
  - job_name: 'api-gateway'
    metrics_path: '/metrics'
    scheme: 'http'
    static_configs:
      - targets: ['api-gateway:3000']
        labels:
          service: 'api-gateway'
          tier: 'frontend'
    relabel_configs:
      - source_labels: ['__address__']
        target_label: 'instance'
        replacement: '${1}'

  # Habit Service metrics
  - job_name: 'habit-service'
    metrics_path: '/metrics'
    scheme: 'http'
    static_configs:
      - targets: ['habit-service:3001']
        labels:
          service: 'habit-service'
          tier: 'backend'
    scrape_interval: 15s
    metrics_relabel_configs:
      - source_labels: [__name__]
        regex: 'habit_.*'
        action: keep

  # Analytics Service metrics
  - job_name: 'analytics-service'
    metrics_path: '/metrics'
    scheme: 'http'
    static_configs:
      - targets: ['analytics-service:3002']
        labels:
          service: 'analytics-service'
          tier: 'backend'
    scrape_interval: 15s
    metrics_relabel_configs:
      - source_labels: [__name__]
        regex: 'analytics_.*'
        action: keep

  # Auth Service metrics
  - job_name: 'auth-service'
    metrics_path: '/metrics'
    scheme: 'http'
    static_configs:
      - targets: ['auth-service:3003']
        labels:
          service: 'auth-service'
          tier: 'backend'
    scrape_interval: 15s
    metrics_relabel_configs:
      - source_labels: [__name__]
        regex: 'auth_.*'
        action: keep

  # Notification Service metrics
  - job_name: 'notification-service'
    metrics_path: '/metrics'
    scheme: 'http'
    static_configs:
      - targets: ['notification-service:3004']
        labels:
          service: 'notification-service'
          tier: 'backend'
    scrape_interval: 15s
    metrics_relabel_configs:
      - source_labels: [__name__]
        regex: 'notification_.*'
        action: keep

# Alert rules for monitoring critical service metrics
alerting_rules:
  groups:
    - name: habit_tracking_alerts
      rules:
        # High Latency Alert
        - alert: HighLatency
          expr: http_request_duration_seconds{quantile="0.95"} > 2
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: High latency detected
            description: 95th percentile of request duration exceeds 2 seconds

        # High Error Rate Alert
        - alert: HighErrorRate
          expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
          for: 2m
          labels:
            severity: critical
          annotations:
            summary: High error rate detected
            description: Error rate exceeds 10% over 5 minutes

        # High Memory Usage Alert
        - alert: HighMemoryUsage
          expr: process_resident_memory_bytes > 1073741824
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: High memory usage detected
            description: Process memory usage exceeds 1GB

        # Service Down Alert
        - alert: ServiceDown
          expr: up == 0
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: Service is down
            description: "{{ $labels.job }} service is down"

# Storage configuration for metric retention
storage:
  tsdb:
    path: /prometheus
    retention.time: 15d
    retention.size: 50GB

# Remote write configuration for long-term storage (optional)
remote_write:
  - url: "http://remote-storage:9201/write"
    queue_config:
      capacity: 500
      max_shards: 1000
      max_samples_per_send: 100

# Remote read configuration for historical data (optional)
remote_read:
  - url: "http://remote-storage:9201/read"
    read_recent: true
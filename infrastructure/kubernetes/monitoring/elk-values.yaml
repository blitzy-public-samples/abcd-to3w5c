# Global settings for ELK Stack deployment
# Version: 8.x
global:
  clusterName: habit-tracker-logs
  namespace: monitoring
  imageTag: "8.x"
  imagePullPolicy: IfNotPresent
  storageClass: gp2
  serviceAccountName: elk-service-account

# Elasticsearch Configuration
elasticsearch:
  clusterName: ${global.clusterName}
  nodeGroup: "master"
  masterService: ${global.clusterName}-master
  roles:
    - master
    - data
    - ingest
  
  # High Availability Settings
  replicas: 3
  minimumMasterNodes: 2
  
  # Resource Allocation
  resources:
    requests:
      cpu: "1000m"
      memory: "2Gi"
    limits:
      cpu: "2000m"
      memory: "4Gi"
  
  # Persistence Configuration
  persistence:
    enabled: true
    storageClass: ${global.storageClass}
    size: "100Gi"
    annotations:
      backup.velero.io/backup-volumes: data
  
  # Security Settings
  security:
    enabled: true
    tls:
      enabled: true
      autoGenerated: true
    roles:
      - name: habit_tracker_admin
        rules:
          - indices: ["logs-*"]
            privileges: ["all"]
    
  # Pod Configuration
  podDisruptionBudget:
    enabled: true
    minAvailable: 2
  
  antiAffinity:
    type: "hard"
  
  # JVM and Heap Settings
  esJavaOpts: "-Xmx2g -Xms2g"
  
  # Monitoring
  monitoring:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: monitoring

# Logstash Configuration
logstash:
  replicas: 2
  
  # Resource Allocation
  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "1000m"
      memory: "2Gi"
  
  # Persistence
  persistence:
    enabled: true
    storageClass: ${global.storageClass}
    size: "20Gi"
  
  # Service Ports
  service:
    type: ClusterIP
    ports:
      - name: beats
        port: 5044
        targetPort: 5044
      - name: http
        port: 8080
        targetPort: 8080
      - name: tcp
        port: 5000
        targetPort: 5000
  
  # Pipeline Configuration
  pipelines:
    main: |-
      input {
        beats {
          port => 5044
        }
      }
      filter {
        grok {
          match => { "message" => "%{COMBINEDAPACHELOG}" }
        }
      }
      output {
        elasticsearch {
          hosts => ["${global.clusterName}-master:9200"]
          index => "logs-%{+YYYY.MM.dd}"
          ssl => true
          ssl_certificate_verification => true
        }
      }
  
  # Monitoring
  monitoring:
    enabled: true
    serviceMonitor:
      enabled: true

# Kibana Configuration
kibana:
  replicas: 2
  
  # Resource Allocation
  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "1000m"
      memory: "2Gi"
  
  # Service Configuration
  service:
    type: ClusterIP
    port: 5601
  
  # Ingress Configuration
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    hosts:
      - host: kibana.habit-tracker.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: kibana-tls
        hosts:
          - kibana.habit-tracker.com
  
  # Security Settings
  securityContext:
    enabled: true
    runAsUser: 1000
    fsGroup: 1000
  
  # Kibana Configuration
  kibanaConfig:
    kibana.yml: |
      server.name: kibana
      server.host: "0.0.0.0"
      elasticsearch.hosts: ["https://${global.clusterName}-master:9200"]
      elasticsearch.ssl.verificationMode: certificate
      xpack.security.enabled: true
      xpack.reporting.enabled: true
      xpack.monitoring.enabled: true
  
  # Monitoring
  monitoring:
    enabled: true
    serviceMonitor:
      enabled: true

# Index Lifecycle Management
indexLifecyclePolicies:
  logs:
    phases:
      hot:
        min_age: "0ms"
        actions:
          rollover:
            max_age: "7d"
            max_size: "50gb"
      warm:
        min_age: "7d"
        actions:
          shrink:
            number_of_shards: 1
      delete:
        min_age: "30d"
        actions:
          delete: {}

# Backup Configuration
volumeSnapshotConfig:
  enabled: true
  schedule: "0 0 * * *"
  retention:
    hourly: 24
    daily: 7
    weekly: 4
    monthly: 12